# Generated by Django 5.1.6 on 2025-02-10 22:29

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(16), django.core.validators.MaxValueValidator(65)])),
                ('country', models.CharField(choices=[('GR', 'Greece'), ('US', 'United States'), ('UK', 'United Kingdom'), ('DE', 'Germany'), ('FR', 'France'), ('ES', 'Spain'), ('IT', 'Italy'), ('CA', 'Canada'), ('BR', 'Brazil'), ('RU', 'Russia')], max_length=2)),
                ('residence', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('C++', 'C++'), ('Javascript', 'Javascript'), ('Python', 'Python'), ('Java', 'Java'), ('Lua', 'Lua'), ('Rust', 'Rust'), ('Go', 'Go'), ('Julia', 'Julia')], max_length=50)),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('experienced', 'Experienced'), ('expert', 'Expert')], max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=500)),
                ('max_collaborators', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('completed', models.BooleanField(default=False)),
                ('active_collaborators', models.ManyToManyField(blank=True, related_name='contributed_projects', to='api.user')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborators', to='api.project')),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations', to='api.user')),
            ],
            options={
                'unique_together': {('project', 'collaborator')},
            },
        ),
        migrations.CreateModel(
            name='ProjectApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], max_length=50)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='api.project')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='api.user')),
            ],
            options={
                'unique_together': {('project', 'applicant')},
            },
        ),
    ]
